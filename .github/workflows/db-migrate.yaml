on:
  push:
    branches:
      - main

jobs:
  migrate_data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region "us-west-2"

      - name: Assume IAM role in source account
        run: |
          sts_output=$(aws sts assume-role --role-arn arn:aws:iam::822016532063:role/extension-migration-role --role-session-name "AssumeRoleSession")
          echo "$sts_output" > assumed-role.json
          export AWS_ACCESS_KEY_ID=$(jq -r '.Credentials.AccessKeyId' assumed-role.json)
          export AWS_SECRET_ACCESS_KEY=$(jq -r '.Credentials.SecretAccessKey' assumed-role.json)
          export AWS_SESSION_TOKEN=$(jq -r '.Credentials.SessionToken' assumed-role.json)
          echo "Temporary credentials:"
          echo "Access Key ID: $AWS_ACCESS_KEY_ID"
          echo "Secret Access Key: $AWS_SECRET_ACCESS_KEY"
          echo "Session Token: $AWS_SESSION_TOKEN"
          aws dynamodb list-tables --region "us-west-2" | jq -r '.TableNames | .[]' > table_names.txt

      - name: Scan and save table data
        run: |
          while IFS= read -r table_name; do
            aws dynamodb scan --table-name "$table_name" --region "us-west-2" > "${table_name}.json"
          done < table_names.txt

      - name: Create artifacts
        run: |
          for file in *.json; do
            table_name=$(echo "$file" | cut -d '.' -f 1)
            cat "$file" > "${table_name}_table_data.json"
          done

      - name: Upload table data as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: DynamoDB Data Migration
          path: ./*_table_data.json
