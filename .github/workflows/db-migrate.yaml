name: DynamoDB Data Migration

on:
  push:
    branches:
      - main

jobs:
  migrate_data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region "us-west-2"

      - name: Assume IAM role in source account
        run: |
          sts_output=$(aws sts assume-role --role-arn arn:aws:iam::701820496102:role/destination-db-migrate-role --role-session-name "AssumeRoleSession")
          echo "$sts_output" > assumed-role.json
          export AWS_ACCESS_KEY_ID=$(jq -r '.Credentials.AccessKeyId' assumed-role.json)
          export AWS_SECRET_ACCESS_KEY=$(jq -r '.Credentials.SecretAccessKey' assumed-role.json)
          export AWS_SESSION_TOKEN=$(jq -r '.Credentials.SessionToken' assumed-role.json)
          echo "Temporary credentials:"
          echo "Access Key ID: $AWS_ACCESS_KEY_ID"
          echo "Secret Access Key: $AWS_SECRET_ACCESS_KEY"
          echo "Session Token: $AWS_SESSION_TOKEN"
          aws dynamodb list-tables --region "us-west-2"
          aws dynamodb scan --table-name "migration-table" --region "us-west-2" > data.json
          cat data.json
          python convert_data.py
          cat batch_write_data.json

      - name: Import data into destination DynamoDB table
        run: |
          aws dynamodb batch-write-item --request-items file://batch_write_data.json --region "us-west-2"
